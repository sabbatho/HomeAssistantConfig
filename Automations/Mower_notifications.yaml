#
#
#
#
#

- alias: "Sileno_error_undefined"
  id: "Sileno fel odefinierat"
  initial_state: true
  mode: single
  trigger:
    platform: state
    entity_id: vacuum.sileno
    to: "error"
  condition:
    - "{{ is_state('input_boolean.sileno_winter_sleep', 'off') }}"
    - "{{ not is_state('sensor.sileno_error', 'OFF_HATCH_OPEN') }}"
#    - "{{ state_attr('vacuum.sileno', 'last_error') != 'OFF_HATCH_OPEN' }}"
  action:
    - service: notify.hanna_jimmy
      data:
        title: "Olle behöver hjälp!!"
        message: "Error: {{ states('sensor.sileno_error') }}"
#
- alias: "Sileno_should_charge"
  id: "Sileno borde ladda"
  initial_state: true
  mode: single
  trigger:
    platform: time
    at: "20:00:00"
  condition:
    - "{{ states('vacuum.sileno') != 'docked' }}"
    - "{{ is_state('input_boolean.sileno_winter_sleep', 'off') }}"
  action:
    - service: notify.hanna_jimmy
      data:
        title: "Olle behöver hjälp!!"
        message: "Jag borde ladda vid denna tiden, kom och hjälp mig."
#
#- alias: "Sileno_error_trapped"
#  id: "Sileno är instängd"
#  initial_state: true
#  mode: single
#  trigger:
#    platform: state
#    entity_id: vacuum.sileno
#    to: "error"
#  condition:
#    - "{{ state_attr('vacuum.sileno', 'last_error') == 'trapped' }}"
#    - "{{ is_state('input_boolean.sileno_winter_sleep', 'off') }}"
#  action:
#    - service: notify.hanna_jimmy
#      data:
#        title: "Olle behöver hjälp!!"
#        message: "Instängd, kom och hjälp mig."
#
#- alias: "Sileno_error_lifted"
#  id: "Sileno hjul i luften"
#  initial_state: true
#  mode: single
#  trigger:
#    platform: state
#    entity_id: vacuum.sileno
#    to: "error"
#  condition:
#    - "{{ state_attr('vacuum.sileno', 'last_error') == 'lifted' }}"
#    - "{{ is_state('input_boolean.sileno_winter_sleep', 'off') }}"
#  action:
#    - service: notify.hanna_jimmy
#      data:
#        title: "Olle behöver hjälp!!"
#        message: "Hjulet är i luften, kom och hjälp mig."
#
