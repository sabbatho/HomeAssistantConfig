#
#
#

#
# - alias: "Robot cleanup if nobody is home"
#   id: "Robot städa om ingen är hemma"
#   initial_state: true
#   mode: single
#   trigger:
#     - platform: state
#       entity_id: group.hanna_jimmy
#       from: home
#       to: not_home
#   condition:
#     - condition: not
#       conditions:
#         - condition: state
#           entity_id: person.jimmy
#           state: "home"
#         - condition: state
#           entity_id: person.hanna
#           state: "home"
#         - condition: state
#           entity_id: input_boolean.cleaned_today
#           state: "on"
#     - condition: time
#       after: "10:00:00"
#       before: "21:00:00"
#     - condition: state
#       entity_id: input_boolean.visitors
#       state: "off"
#   action:
#     - service: vacuum.start
#       entity_id: vacuum.roborock_s5_max
#
- alias: "Robot cleanup if not cleaned for X days"
  id: "Robot städa om inte städat på X antal dagar"
  initial_state: true
  mode: single
  trigger:
    - platform: time
      at: input_datetime.vacuum_main_floor_start
  condition:
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
        - sat
        - sun
    - condition: state
      entity_id: input_boolean.cleaned_today
      state: "off"
    - condition: state
      entity_id: input_boolean.visitors
      state: "off"
    - condition: or
      conditions:
        - condition: state
          entity_id: person.jimmy
          state: "home"
        - condition: state
          entity_id: person.hanna
          state: "home"
  action:
    - service: vacuum.start
      entity_id: vacuum.roborock_s5_max
#
- alias: "Robot_cleaned_empty_bin"
  id: "Robot städat dags att tömma"
  initial_state: true
  mode: single
  trigger:
    - platform: state
      entity_id: person.jimmy
      to: "home"
    - platform: state
      entity_id: person.hanna
      to: "home"
    - platform: numeric_state
      entity_id: counter.robot_counter_empty_bin
      above: 2
  condition:
    - condition: numeric_state
      entity_id: counter.robot_counter_empty_bin
      above: 2
    - condition: state
      entity_id: vacuum.roborock_s5_max
      state: "docked"
    - condition: or
      conditions:
        - condition: state
          entity_id: person.jimmy
          state: "home"
        - condition: state
          entity_id: person.hanna
          state: "home"
  action:
    - delay:
        seconds: 10
    - service: vacuum.send_command
      target:
        entity_id: "vacuum.roborock_s5_max"
      data:
        command: app_goto_target
        params: [22800, 30800]
    - delay:
        seconds: 10
    - service: counter.reset
      target:
        entity_id: counter.robot_counter_empty_bin
#
- alias: "Robot: Reset cleaned today counter"
  id: "Robot resetta städat räknaren"
  initial_state: true
  mode: single
  trigger:
    - platform: time
      at: "01:00:00"
  action:
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.cleaned_today
#
- alias: "roborock_started_cleaning"
  id: "Robot: Robot started cleaning"
  initial_state: true
  mode: single
  trigger:
    - platform: state
      entity_id: vacuum.roborock_s5_max
      from: "docked"
      to: "cleaning"
  action:
    - service: notify.hanna_jimmy
      data:
        title: "Robot börjar"
        message: "Robot börjar städa!"
        data:
          notification_icon: "mdi:robot-vacuum"
          actions:
            - action: "ROBOT_AK_HEM"
              title: "Docka robot"
            - action: "ROBOT_STANNA"
              title: "Pausa robot"
#    - service: notify.lmhobbyrum
#      data:
#        message: "Robot börjar städa!"
#        data:
#          icon: "a13030"
#          icon_type: "none"
#          sound: "bicycle"
#          priority: "warning"
#          cycles: 2
    - service: notify.lmmatsal
      data:
        message: "Robot börjar städa!"
        data:
          icon: "a13030"
          icon_type: "none"
          sound: "bicycle"
          priority: "warning"
          cycles: 2
    - service: notify.lmsovrum
      data:
        message: "Robot börjar städa!"
        data:
          icon: "a13030"
          icon_type: "none"
          sound: "bicycle"
          priority: "warning"
          cycles: 2
    - service: notify.lmvardagsrum
      data:
        message: "Robot börjar städa!"
        data:
          icon: "a13030"
          icon_type: "none"
          sound: "bicycle"
          priority: "warning"
          cycles: 2
#
- alias: "roborock_back_to_dock"
  id: "Robot åk hem"
  initial_state: true
  mode: single
  trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: "ROBOT_AK_HEM"
  action:
    - service: vacuum.return_to_base
      target:
        entity_id: vacuum.roborock_s5_max
#
- alias: "roborock_paused"
  id: "Robot pausa"
  initial_state: true
  mode: single
  trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: "ROBOT_STANNA"
  action:
    - service: vacuum.pause
      target:
        entity_id: vacuum.roborock_s5_max
#
- alias: "roborock_finished_cleaning"
  id: "Robot: Robot finished cleaning"
  initial_state: true
  mode: single
  trigger:
    - platform: state
      entity_id: vacuum.roborock_s5_max
      from: "returning"
      to: "docked"
  action:
    - service: notify.hanna_jimmy
      data:
        title: "Robot klar"
        message: "Städat klart! Tog {{ (states('sensor.roborock_s5_max_last_clean_duration') | int /60) | round(0) }} min, på {{ states('sensor.roborock_s5_max_last_clean_area') | round(0) }} kvadrat."
        data:
          notification_icon: "mdi:robot-vacuum"
    - service: input_boolean.turn_on
      target:
        entity_id: input_boolean.cleaned_today
#    - service: notify.lmhobbyrum
#      data:
#        message: "Städat klart! Tog {{ (states('sensor.roborock_s5_max_last_clean_duration') | int /60) | round(0) }} min, på {{ states('sensor.roborock_s5_max_last_clean_area') | round(0) }} kvadrat."
#        data:
#          icon: "a13030"
#          icon_type: "none"
#          sound: "notification2"
#          priority: "warning"
#          cycles: 2
    - service: notify.lmmatsal
      data:
        message: "Städat klart! Tog {{ (states('sensor.roborock_s5_max_last_clean_duration') | int /60) | round(0) }} min, på {{ states('sensor.roborock_s5_max_last_clean_area') | round(0) }} kvadrat."
        data:
          icon: "a13030"
          icon_type: "none"
          sound: "notification2"
          priority: "warning"
          cycles: 2
    - service: notify.lmsovrum
      data:
        message: "Städat klart! Tog {{ (states('sensor.roborock_s5_max_last_clean_duration') | int /60) | round(0) }} min, på {{ states('sensor.roborock_s5_max_last_clean_area') | round(0) }} kvadrat."
        data:
          icon: "a13030"
          icon_type: "none"
          sound: "notification2"
          priority: "warning"
          cycles: 2
    - service: notify.lmvardagsrum
      data:
        message: "Städat klart! Tog {{ (states('sensor.roborock_s5_max_last_clean_duration') | int /60) | round(0) }} min, på {{ states('sensor.roborock_s5_max_last_clean_area') | round(0) }} kvadrat."
        data:
          icon: "a13030"
          icon_type: "none"
          sound: "notification2"
          priority: "warning"
          cycles: 2
    - service: counter.increment
      target:
        entity_id: counter.robot_counter_empty_bin
    - service: input_datetime.set_datetime
      target:
        entity_id: input_datetime.vacuum_main_floor_last_run
      data:
        timestamp: "{{ (now().timestamp() +25*60*60) }}"
#
- alias: "roborock_error"
  id: "Robot: Error"
  initial_state: true
  mode: single
  trigger:
    - platform: state
      entity_id: vacuum.roborock_s5_max
      to: "error"
  action:
    - service: notify.hanna_jimmy
      data:
        title: "Robot har stött på problem"
        message: "Error: {{ state_attr('vacuum.roborock_s5_max', 'error') }}."
        data:
          notification_icon: "mdi:robot-vacuum-alert"
#
