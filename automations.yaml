#
- id: 'Update available notification'
  alias: Notifiering mobil ny uppdatering
  trigger:
  - platform: time_pattern
    hours: '/2'
  condition:
    condition : and
    conditions:
    - condition: template
      value_template: '{{ states.sensor.hass_installed_version.state != states.sensor.hass_current_version.state }}'
    - condition: time
      before: '23:00:00'
      after: '10:00:00'
  action:
  - service: notify.pushbullet
    data_template: 
      title: "Ny Home Assistant version"
      message: "Home Assistant {{ states.sensor.hass_current_version.state }} finns nu att installeras"
      target: device/privata
#
- id: 'Hass restart notify'
  alias: Notifiering att HASS har startat om
  trigger:
  - platform: numeric_state
    entity_id: sensor.uptime
    value_template: "{{ states('sensor.uptime') | round(1) }}"
    below: 0.2
  action:
  - service: notify.pushbullet
    data: 
      title: "Home Assistant omstartat"
      message: "Home Assistant har av någon anledning startat om"
      target: device/privata
#
- id: 'aquarium_day_off_weekday'
  alias: Akvarium dag Av vardag
  trigger:
  - platform: time
    at: '23:30:00'
  condition:
    - condition: time
      weekday:
      - mon
      - tue
      - wed
      - thu
      - sun
  action:
  - service: switch.turn_off
    data:
      entity_id: switch.akvarium_dag
#
- id: 'aquarium_day_off_weekend'
  alias: Akvarium dag Av helg
  trigger:
  - platform: time
    at: '01:00:00'
  condition:
    - condition: time
      weekday:
      - sat
      - sun
  action:
  - service: switch.turn_off
    data:
      entity_id: switch.akvarium_dag
#
- id: 'aquarium_day_on'
  alias: Akvarium dag På
  trigger: 
  - platform: time
    at: '13:00:00'
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.akvarium_dag
#
- id: 'hallway_cabinet_on_jimmy'
  alias: Hall Vitrin På Jimmy
  trigger:
  - platform: time
    at: '07:15:00'
  condition:
  - condition: and
    conditions:
    - condition: time
      weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
    - condition: numeric_state
      entity_id: sun.sun
      value_template: "{{ state.attributes.elevation }}"
      below: -0.5
    - condition: state
      entity_id: person.jimmy
      state: 'home'
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.hall_vitrin
#
- id: 'hallway_cabinet_on_hanna'
  alias: Hall Vitrin På Hanna
  trigger:
  - platform: time
    at: '04:30:00'
  condition:
  - condition: and
    conditions:
    - condition: time
      weekday:
      - mon
    - condition: numeric_state
      entity_id: sun.sun
      value_template: "{{ state.attributes.elevation }}"
      below: -0.5
    - condition: state
      entity_id: person.hanna
      state: 'home'
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.hall_vitrin
#
- id: 'xmas_lights_on'
  alias: Julbelysning På
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    value_template: "{{ state.attributes.elevation }}"
    below: -0.5
  condition:
  - condition: template
    value_template: "{{ now().month > 11 and now().day > 12 or now().month < 2 and now().day < 14 }}"
  action:
  - service: switch.turn_on
    data:
      entity_id: group.julbelysning
#
- id: 'xmas_lights_off'
  alias: Julbelysning Av
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    value_template: "{{ state.attributes.elevation }}"
    above: -0.5
  condition:
  - condition: template
    value_template: "{{ now().month > 11 and now().day > 12 or now().month < 2 and now().day < 15 }}"
  action:
  - service: switch.turn_off
    data:
      entity_id: group.julbelysning
#
- id: 'hallway_outside_temp_lights'
  alias: Hall lyse mot utetemp
  trigger:
    platform: time_pattern
    minutes: '/10'
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: device_tracker.jimmy_huawei
      state: 'home'
    - condition: numeric_state
      entity_id: sun.sun
      value_template: "{{ state.attributes.elevation }}"
      below: 0.5
    - condition: or
      conditions:
      - condition: time
        before: '23:00:00'
        after: '08:00:00'
        weekday:
        - mon
        - tue
        - wed
        - thu
      - condition: time
        before: '23:59:00'
        after: '08:00:00'
        weekday:
        - fri
      - condition: time
        before: '23:59:00'
        after: '11:00:00'
        weekday:
        - sat
      - condition: time
        before: '23:00:00'
        after: '11:00:00'
        weekday:
        - sun
  action:
  - service: light.turn_on
    data_template:
      entity_id: light.osram_smart_e27_color_1
      brightness: 255
      color_name: >
        {% if states('sensor.framsidan') | float <= -15 %}
          blueviolet
        {% elif states('sensor.framsidan') | float > -15 and states('sensor.framsidan') | float <= -10 %}
          blue
        {% elif states('sensor.framsidan') | float > -10 and states('sensor.framsidan') | float <= -5 %}
          deepskyblue
        {% elif states('sensor.framsidan') | float > -5 and states('sensor.framsidan') | float <= 0 %}
          mediumseagreen
        {% elif states('sensor.framsidan') | float > 0 and states('sensor.framsidan') | float <= 5 %}
          green
        {% elif states('sensor.framsidan') | float > 5 and states('sensor.framsidan') | float <= 10 %}
          greenyellow
        {% elif states('sensor.framsidan') | float > 10 and states('sensor.framsidan') | float < 15 %}
          yellow
        {% elif states('sensor.framsidan') | float > 15 and states('sensor.framsidan') | float < 20 %}
          orange
        {% elif states('sensor.framsidan') | float > 20 and states('sensor.framsidan') | float < 25 %}
          tomato
        {% elif states('sensor.framsidan') | float >= 25 %}
          red
        {% else %}
          white
        {% endif %}
      transition: 20
  - service: light.turn_on
    data_template:
      entity_id: light.trust_e27_color_1
      brightness: 255
      color_name: >
        {% if states('sensor.framsidan') | float <= -15 %}
          blueviolet
        {% elif states('sensor.framsidan') | float > -15 and states('sensor.framsidan') | float <= -10 %}
          blue
        {% elif states('sensor.framsidan') | float > -10 and states('sensor.framsidan') | float <= -5 %}
          deepskyblue
        {% elif states('sensor.framsidan') | float > -5 and states('sensor.framsidan') | float <= 0 %}
          mediumseagreen
        {% elif states('sensor.framsidan') | float > 0 and states('sensor.framsidan') | float <= 5 %}
          green
        {% elif states('sensor.framsidan') | float > 5 and states('sensor.framsidan') | float <= 10 %}
          greenyellow
        {% elif states('sensor.framsidan') | float > 10 and states('sensor.framsidan') | float < 15 %}
          yellow
        {% elif states('sensor.framsidan') | float > 15 and states('sensor.framsidan') | float < 20 %}
          orange
        {% elif states('sensor.framsidan') | float > 20 and states('sensor.framsidan') | float < 25 %}
          tomato
        {% elif states('sensor.framsidan') | float >= 25 %}
          red
        {% else %}
          white
        {% endif %}
      transition: 20
#
- id: 'windows_on'
  alias: Fönster På
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    value_template: "{{ state.attributes.elevation }}"
    below: -0.5
  action:
  - service: switch.turn_on
    data:
      entity_id: group.fonster_switches
  - service: light.turn_on
    entity_id: group.fonster_lights
    data:
      brightness: 127
#
- id: 'windows_off'
  alias: Fönster Av
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    value_template: "{{ state.attributes.elevation }}"
    above: -0.5
  action:
  - service: switch.turn_off
    data:
      entity_id: group.fonster_switches
  - service: light.turn_off
    data:
      entity_id: group.fonster_lights
#
- id: 'incoming_call'
  alias: Inkommande samtal ljusvarning
  trigger:
  - platform: state
    entity_id: sensor.privatephonecall
    to: 'incoming_call'
  condition:
  - condition: state
    entity_id: device_tracker.jimmy_huawei
    state: 'home'
  action:
  - service: light.turn_on
    data:
      entity_id: light.trust_e27_color_1
      brightness: 255
      effect: colorloop
      transition: 1
  - service: light.turn_on
    data:
      entity_id: light.osram_smart_e27_color_1
      brightness: 255
      effect: colorloop
      transition: 1
  - service: switch.turn_on
    data:
      entity_id: switch.vardags_eld
  - delay:
      seconds: 15
  - service: switch.turn_off
    data:
      entity_id: switch.vardags_eld
  - service: light.turn_off
    data:
      entity_id: light.osram_smart_e27_color_1
  - service: light.turn_off
    data:
      entity_id: light.trust_e27_color_1
#
- id: 'bedroom_wakeup_tv'
  alias: Sovrum vakna TV
  trigger:
  - platform: time
    at: '07:01:00'
  condition:
  - condition: and
    conditions:
    - condition: time
      weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
    - condition: state
      entity_id: device_tracker.jimmy_huawei
      state: 'home'
  action:
  - service: media_extractor.play_media
    data:
      entity_id: media_player.sovrum
      media_content_type: video/youtube
    data_template:
      media_content_id: >
        {{ [
        "https://www.youtube.com/watch?v=1ZYbU82GVz4", 
        "https://www.youtube.com/watch?v=MvtWljsraTs", 
        "https://www.youtube.com/watch?v=Ll8LQoStiDw", 
        "https://www.youtube.com/watch?v=o8GrqUSdzi0", 
        "https://www.youtube.com/watch?v=5gBJrZmbGLo", 
        "https://www.youtube.com/watch?v=4oY3v0jAWr4",
        "https://www.youtube.com/watch?v=mFlrc16xjik",
        "https://www.youtube.com/watch?v=tGQAqHkyKGw",
        "https://www.youtube.com/watch?v=j8SOfg2pxXk",
        "https://www.youtube.com/watch?v=DWkDBlEyz7U",
        "https://www.youtube.com/watch?v=4zqKJBxRyuo",
        "https://www.youtube.com/watch?v=hlWiI4xVXKY"
        ] | random}}
  - delay:
      seconds: 10
  - service: media_player.volume_set
    entity_id: media_player.sovrum
    data:
      volume_level: 0.5
#
- id: 'bedroom_wakeup_light'
  alias: Sovrum vakna lyse
  trigger:
  - platform: time
    at: '07:05:00'
  condition:
  - condition: and
    conditions:
    - condition: time
      weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
    - condition: state
      entity_id: device_tracker.jimmy_huawei
      state: 'home'
    - condition: numeric_state
      entity_id: sun.sun
      value_template: "{{ state.attributes.elevation }}"
      below: 0.5
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.sovrum2
#
- id: 'plex_play'
  alias: Tittar på tv
  trigger:
  - platform: state
    entity_id: media_player.tvdatorn
    to: 'playing'
  action:
  - service: switch.turn_off
    data:
      entity_id: switch.vardags_tavla
  - service: switch.turn_off
    data:
      entity_id: switch.vardagsrum2
  - service: switch.turn_off
    data:
      entity_id: switch.vaxt3
#
- id: 'plex_idle'
  alias: Tittar inte längre på tv
  trigger:
  - platform: state
    entity_id: media_player.tvdatorn
    from: 'playing'
    to: 'idle'
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.vardags_tavla
  - service: switch.turn_on
    data:
      entity_id: switch.vardagsrum2
  - service: switch.turn_on
    data:
      entity_id: switch.vaxt3
#
- id: 'plex_paused'
  alias: Tv pausad
  trigger:
  - platform: state
    entity_id: media_player.tvdatorn
    from: 'playing'
    to: 'paused'
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.vardags_tavla
  - service: switch.turn_on
    data:
      entity_id: switch.vardagsrum2
  - service: switch.turn_on
    data:
      entity_id: switch.vaxt3
#
- id: 'chromecast_bedroom_on'
  alias: Sovrumstv På
  trigger:
  - platform: state
    entity_id: media_player.sovrum
    from: 'off'
    to: 'idle'
  - platform: state
    entity_id: media_player.sovrum
    from: 'off'
    to: 'playing'
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.sovrumstv
#
- id: 'tv_pc_on'
  alias: Tvdator På
  trigger:
  - platform: state
    entity_id: remote.vardagsrum
    to: 'on'
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.tv_dator
#
- id: 'tv_pc_off'
  alias: Tvdator Av
  trigger:
  - platform: state
    entity_id: remote.vardagsrum
    to: 'off'
  action:
    service: shell_command.shutdown_tvdator
#
- id: 'wakeup_day_off_light'
  alias: Går upp Ledig light
  trigger:
  - platform: state
    entity_id: switch.speldator1
    to: 'on'
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: device_tracker.jimmy_huawei
      state: 'home'
    - condition: numeric_state
      entity_id: sun.sun
      value_template: "{{ state.attributes.elevation }}"
      below: 0.5
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.sovrum
  - service: switch.turn_on
    data:
      entity_id: switch.sovrum2
  - service: switch.turn_on
    data:
      entity_id: switch.vardags_tavla
  - service: switch.turn_on
    data:
      entity_id: switch.hall_vitrin
  - service: switch.turn_on
    data:
      entity_id: switch.vardagsrum2
#
- id: 'wakeup_day_off_always'
  alias: Går upp Ledig always
  trigger:
  - platform: state
    entity_id: switch.speldator1
    to: 'on'
  condition:
  - condition: state
    entity_id: device_tracker.jimmy_huawei
    state: 'home'
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.vaxt_1
  - service: switch.turn_on
    data:
      entity_id: switch.vaxt2
  - service: shell_command.lametric_bright
  - service: switch.turn_on
    data:
      entity_id: switch.vaxt3
  - service: switch.turn_on
    data:
      entity_id: switch.ljud_dator
#
- id: 'coming_home_always'
  alias: Kommer hem always
  trigger:
  - platform: state
    entity_id: device_tracker.dc729bc79fef
    to: 'home'
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: device_tracker.jimmy_huawei
      state: 'home'
    - condition: time
      before: '23:00:00'
      after: '10:00:00'
  action:
  - service: switch.turn_off
    data:
      entity_id: group.overvakning
  - delay:
      seconds: 1
  - service: switch.turn_on
    data:
      entity_id: switch.sovrum
  - service: switch.turn_on
    data:
      entity_id: switch.vaxt_1
  - service: switch.turn_on
    data:
      entity_id: switch.vaxt2
  - service: shell_command.lametric_bright
  - service: switch.turn_on
    data:
      entity_id: switch.vaxt3
  - delay:
      seconds: 1
  - service: switch.turn_on
    data:
      entity_id: switch.ljud_dator
#
- id: 'coming_home_light'
  alias: Kommer hem light
  trigger:
  - platform: state
    entity_id: device_tracker.dc729bc79fef
    to: 'home'
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: device_tracker.jimmy_huawei
      state: 'home'
    - condition: numeric_state
      entity_id: sun.sun
      value_template: "{{ state.attributes.elevation }}"
      below: 0.5
    - condition: time
      before: '23:00:00'
      after: '10:00:00'
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.sovrum2
  - service: switch.turn_on
    data:
      entity_id: switch.vardags_tavla
  - service: switch.turn_on
    data:
      entity_id: switch.hall_vitrin
  - service: switch.turn_on
    data:
      entity_id: switch.vardagsrum2
#
- id: 'leaving_home'
  alias: Inte hemma
  trigger:
  - platform: state
    entity_id: device_tracker.jimmy_huawei
    to: 'not_home'
  action:
  - service: switch.turn_off
    data:
      entity_id: switch.sovrum
  - service: switch.turn_off
    data:
      entity_id: switch.vardags_tavla
  - service: switch.turn_off
    data:
      entity_id: switch.vardags_eld
  - delay:
      seconds: 1
  - service: switch.turn_off
    data:
      entity_id: switch.ljud_dator
  - service: switch.turn_off
    data:
      entity_id: switch.hall_vitrin
  - service: switch.turn_off
    data:
      entity_id: switch.terrasstak
  - delay:
      seconds: 1
  - service: switch.turn_off
    data:
      entity_id: switch.vaxt_1
  - service: switch.turn_off
    data:
      entity_id: switch.vaxt2
  - service: switch.turn_off
    data:
      entity_id: switch.vaxt3
  - delay:
      seconds: 1
  - service: switch.turn_off
    data:
      entity_id: switch.vardagsrum2
  - service: switch.turn_off
    data:
      entity_id: switch.flakt
  - delay:
      seconds: 1
  - service: switch.turn_on
    data:
      entity_id: group.overvakning
  - service: remote.turn_off
    data:
      entity_id: remote.sovrum
  - delay:
      seconds: 1
  - service: remote.turn_off
    data:
      entity_id: remote.vardagsrum
  - service: media_player.turn_off
    data:
      entity_id: media_player.sovrum
  - service: shell_command.lametric_dark
  - delay:
      seconds: 1
  - service: switch.turn_off
    data:
      entity_id: switch.sovrum2
  - service: light.turn_off
    data:
      entity_id: light.osram_smart_e27_color_1
  - service: light.turn_off
    data:
      entity_id: light.trust_e27_color_1
#
- id: 'lights_off'
  alias: Släck allt
  trigger:
  - platform: state
    entity_id: sensor.privatephonecharge
    to: 'charging'
  action:
  - service: media_player.turn_off
    data:
      entity_id: media_player.sovrum
  - service: switch.turn_off
    data:
      entity_id: switch.sovrum
  - service: switch.turn_off
    data:
      entity_id: switch.vardags_tavla
  - service: switch.turn_off
    data:
      entity_id: switch.vardags_eld
  - service: switch.turn_off
    data:
      entity_id: switch.hall_vitrin
  - service: switch.turn_off
    data:
      entity_id: switch.terrasstak
  - delay:
      seconds: 1
  - service: switch.turn_off
    data:
      entity_id: switch.flakt
  - service: switch.turn_off
    data:
      entity_id: switch.vaxt_1
  - service: switch.turn_off
    data:
      entity_id: switch.vaxt2
  - service: switch.turn_off
    data:
      entity_id: switch.vaxt3
  - delay:
      seconds: 1
  - service: switch.turn_off
    data:
      entity_id: switch.vardagsrum2
  - service: switch.turn_off
    data:
      entity_id: switch.speldator1
  - service: switch.turn_off
    data:
      entity_id: switch.speldator2
  - delay:
      seconds: 1
  - service: light.turn_off
    data:
      entity_id: light.osram_smart_e27_color_1
  - service: light.turn_off
    data:
      entity_id: light.trust_e27_color_1
  - service: remote.turn_off
    data:
      entity_id: remote.sovrum
  - service: switch.turn_off
    data:
      entity_id: switch.ljud_dator
  - service: remote.turn_off
    data:
      entity_id: remote.vardagsrum
  - delay:
      seconds: 1
  - service: shell_command.lametric_dark
  - service: switch.turn_off
    data:
      entity_id: switch.sovrum2
#
- alias: "Accesspoint fuckin up"
  trigger:
    platform: time_pattern
    minutes: '/30'
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: device_tracker.000420e8a4c3
      state: 'not_home'
    - condition: state
      entity_id: device_tracker.88835ddf750d
      state: 'not_home'
    - condition: state
      entity_id: device_tracker.000420fd0d3d
      state: 'not_home'
  action:
  - service: switch.turn_off
    data:
      entity_id: switch.accesspoint
  - delay: '00:00:30'
  - service: switch.turn_on
    data:
      entity_id: switch.accesspoint
  - service: notify.pushbullet
    data: 
      title: "Accesspunkt omstartad"
      message: "Accesspunkten har startats om"
      target: device/privata
#
- id: 'Auto_snapshot_weekly'
  alias: Automatic Snapshot every monday morning
  trigger:
  - platform: time
    at: '01:00:00'
  condition:
  - condition: time
    weekday:
    - mon
  action:
  - service: hassio.snapshot_full
    data_template:
      name: Automated Backup {{ now().strftime('%Y-%m-%d') }}
#
- id: 'backup_copy_dropbox_weekly'
  alias: Backup snaps to Dropbox weekly
  trigger:
  - platform: time
    at: '02:00:00'
  condition:
  - condition: time
    weekday:
    - mon
  action:
  - service: hassio.addon_stdin
    data:
      {"addon":"7be23ff5_dropbox_sync","input":{"command":"upload"}}
#
- alias: "LaMetric_-_Whats_on_chromecast"
  trigger:
    platform: state
    entity_id: media_player.sovrum
    to: playing
  action:
  - service_template: >
      {% if is_state_attr('media_player.sovrum', 'app_name', 'YouTube') %}
        script.lametric_youtube
      {% elif is_state_attr('media_player.sovrum', 'app_name', 'Twitch Chromecast Player') %}
        script.lametric_twitch
      {% elif is_state_attr('media_player.sovrum', 'app_name', 'Plex') and is_state_attr('media_player.sovrum', 'media_content_type', 'tvshow') %}
        script.lametric_plex_tvshow
      {% elif is_state_attr('media_player.sovrum', 'app_name', 'Plex') and is_state_attr('media_player.sovrum', 'media_content_type', 'movie') %}
        script.lametric_plex_movie
      {% elif is_state_attr('media_player.sovrum', 'app_name', 'Spotify') %}
        script.lametric_spotify
      {% elif is_state_attr('media_player.sovrum', 'app_name', 'Netflix') %} 
        script.lametric_netflix
      {% else %}
        script.lametric_unknown
      {% endif %}
  - service: switch.turn_off
    data:
      entity_id: switch.sovrum2
  - delay:
      seconds: 6
  - service: media_player.volume_set
    entity_id: media_player.sovrum
    data:
      volume_level: 1
#
- id: 'chromecast_idle'
  alias: Tittar inte längre på chromecast idle
  trigger:
  - platform: state
    entity_id: media_player.sovrum
    from: 'playing'
    to: 'idle'
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.sovrum2
#
- id: 'chromecast_off'
  alias: Tittar inte längre på chromecast off
  trigger:
  - platform: state
    entity_id: media_player.sovrum
    from: 'playing'
    to: 'off'
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.sovrum2
#
- id: 'chromecast_paused'
  alias: Chromecast pausad
  trigger:
  - platform: state
    entity_id: media_player.sovrum
    from: 'playing'
    to: 'paused'
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.sovrum2
#
- alias: "LaMetric_-_battery_status_mobiles"
  trigger:
    platform: time_pattern
    minutes: '/21'
  condition:
  - condition: state
    entity_id: device_tracker.jimmy_huawei
    state: 'home'
  action:
  - service: notify.lametric_privatmobil_notify
    data_template:
      message: "{{ states.sensor.privatephonebatt.state }}% - Privatmobil"
  - service: notify.lametric_jobbmobil_notify
    data_template:
      message: "{{ states.sensor.workphonebatt.state }}% - Jobbmobil"
  - delay: '00:00:20'
  - service: shell_command.lametric_privatmobil
  - delay: '00:00:20'
  - service: shell_command.lametric_jobbmobil
#
- alias: "LaMetric_-_temperature"
  trigger:
    platform: time_pattern
    minutes: '/19'
  condition:
  - condition: state
    entity_id: device_tracker.jimmy_huawei
    state: 'home'
  action:
  - service: notify.lametric_temp_yr_notify
    data_template:
      message: "{{ states.sensor.framsidan.state }} °C - Framsidan"
  - service: notify.lametric_temp_framsidan_notify
    data_template:
      message: "{{ states.sensor.yr_temperature.state }} °C - YR"
  - service: notify.lametric_temp_smhi_notify
    data_template:
      message: "{{ states.weather.smhi_home.attributes.temperature }} °C - SMHI"
  - delay: '00:00:20'
  - service: shell_command.lametric_temp_framsidan
  - delay: '00:00:20'
  - service: shell_command.lametric_temp_yr
  - delay: '00:00:20'
  - service: shell_command.lametric_temp_smhi
#
- alias: "LaMetric_-_wind"
  trigger:
    platform: time_pattern
    minutes: '/20'
  condition:
  - condition: state
    entity_id: device_tracker.jimmy_huawei
    state: 'home'
  action:
  - service: notify.lametric_vind_yr_notify
    data_template:
      message: "{{ states.sensor.yr_wind_speed.state }} m/s - YR"
  - service: notify.lametric_vind_smhi_notify
    data_template:
      message: "{{ states.sensor.smhi_wind_speed.state }} m/s - SMHI"
  - delay: '00:00:20'
  - service: shell_command.lametric_vind_yr
  - delay: '00:00:20'
  - service: shell_command.lametric_vind_smhi
#
- alias: "LaMetric_-_nas_svullo_used"
  trigger:
    platform: time_pattern
    minutes: '/22'
  condition:
  - condition: state
    entity_id: device_tracker.jimmy_huawei
    state: 'home'
  action:
  - service: notify.lametric_svullo_anvant_notify
    data_template:
      message: "{{ states.sensor.volume_used_volume_1.state }}% använt på svullo"
  - delay: '00:00:20'
  - service: shell_command.lametric_svullo_anvant
#